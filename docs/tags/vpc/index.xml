<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VPC on Clarity</title>
    <link>http://localhost:1313/tags/vpc/</link>
    <description>Recent content in VPC on Clarity</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sun, 12 Mar 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/vpc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create a VPC - Manual</title>
      <link>http://localhost:1313/post/aws/networking/manual-vpc/</link>
      <pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/aws/networking/manual-vpc/</guid>
      <description>&lt;p&gt;In this blogpost we are going to create a &lt;a href=&#34;https://docs.aws.amazon.com/vpc/&#34;&gt;Virtual Private Cloud&lt;/a&gt; in &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;Amazon Web Services&lt;/a&gt; that will host all the shared services generally deployed by an IT team.&#xA;Since networking is fundamental to allow communication between servers and computers, every cloud service providers use a dedicated network construct. AWS and Google Cloud call it a VPC, while Azure for example calls it a VNET (virtual network).&lt;/p&gt;&#xA;&lt;p&gt;Network constructs are different between cloud providers. For example, a VPC is global in Google Cloud while it is a regional construct in AWS. This blogpost is not targeted to highlight the networking differences between AWS and GCP (more on that in a dedicated blogpost).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a VPC - Automation</title>
      <link>http://localhost:1313/post/aws/networking/automation-vpc/</link>
      <pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/aws/networking/automation-vpc/</guid>
      <description>&lt;p&gt;In a previous blogpost we managed to manually create a simple VPC that could host several services or traditionnal &lt;a href=&#34;https://aws.amazon.com/pm/ec2/&#34;&gt;EC2 instances&lt;/a&gt;.&#xA;This process was quite simple using the AWS console as it would deploy all the network construct within a VPC (Subnets, Route Tables, Internet Gateways etc...)&lt;/p&gt;&#xA;&lt;p&gt;I have been deploying network infrastructure (NSX, Cumulus, Cisco ...) for the past few years using &lt;a href=&#34;https://www.ipspace.net/kb/tag/network-infrastructure-as-code.html&#34;&gt;Infrastructure as Code&lt;/a&gt; and naturally I will show you how to deploy networking cloud constructs related to AWS (not only !) using &lt;a href=&#34;https://cloud.hashicorp.com/products/terraform&#34;&gt;Terraform&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
